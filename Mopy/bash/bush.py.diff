diff --git a/Mopy/bash/bush.py b/Mopy/bash/bush.py
index 4551b2d..dfa3300 100644
--- a/Mopy/bash/bush.py
+++ b/Mopy/bash/bush.py
@@ -32,104 +32,208 @@ import ctypes
 from bolt import _,GPath
 
 # Installer -------------------------------------------------------------------
+# ensure all path strings are prefixed with 'r' to avoid interpretation of
+#   accidental escape sequences
+wryeBashDataFiles = set((
+    r'Bashed Patch.esp',
+    r'Bashed Patch, 0.esp',
+    r'Bashed Patch, 1.esp',
+    r'Bashed Patch, 2.esp',
+    r'Bashed Patch, 3.esp',
+    r'Bashed Patch, 4.esp',
+    r'Bashed Patch, 5.esp',
+    r'Bashed Patch, 6.esp',
+    r'Bashed Patch, 7.esp',
+    r'Bashed Patch, 8.esp',
+    r'Bashed Patch, 9.esp',
+    r'Bashed Patch, CBash.esp',
+    r'Bashed Patch, Python.esp',
+    r'Bashed Patch, FCOM.esp',
+    r'Bashed Patch, Warrior.esp',
+    r'Bashed Patch, Thief.esp',
+    r'Bashed Patch, Mage.esp',
+    r'Bashed Patch, Test.esp',
+    r'ArchiveInvalidationInvalidated!.bsa'
+    r'Fallout - AI!.bsa'
+    ))
+wryeBashDataDirs = set((
+    r'Bash Patches',
+    r'INI Tweaks'
+    ))
+ignoreDataFiles = set((
+#    r'FOSE\Plugins\Construction Set Extender.dll',
+#    r'FOSE\Plugins\Construction Set Extender.ini'
+    ))
+ignoreDataDirs = set((
+#    r'FOSE\Plugins\ComponentDLLs\CSE',
+    r'LSData'
+    ))
 bethDataFiles = set((
     #--Vanilla
-    'oblivion.esm',
-    'oblivion_1.1.esm',
-    'oblivion_si.esm',
-    'oblivion_1.1.esm.ghost',
-    'oblivion_si.esm.ghost',
-    'oblivion - meshes.bsa',
-    'oblivion - misc.bsa',
-    'oblivion - sounds.bsa',
-    'oblivion - textures - compressed.bsa',
-    'oblivion - textures - compressed.bsa.orig',
-    'oblivion - voices1.bsa',
-    'oblivion - voices2.bsa',
-    #--Shivering Isles
-    'dlcshiveringisles.esp',
-    'dlcshiveringisles - meshes.bsa',
-    'dlcshiveringisles - sounds.bsa',
-    'dlcshiveringisles - textures.bsa',
-    'dlcshiveringisles - voices.bsa',
+    r'fallout3.esm',
+    r'fallout - menuvoices.bsa',
+    r'fallout - meshes.bsa',
+    r'fallout - misc.bsa',
+    r'fallout - sound.bsa',
+    r'fallout - textures.bsa',
+    r'fallout - voices.bsa',
+    #-- DLC
+    r'anchorage.esm',
+    r'anchorage - main.bsa',
+    r'anchorage - sounds.bsa',
+    r'thepitt.esm',
+    r'thepitt - main.bsa',
+    r'thepitt - sounds.bsa',
+    r'brokensteel.esm',
+    r'brokensteel - main.bsa',
+    r'brokensteel - sounds.bsa',
+    r'pointlookout.esm',
+    r'pointlookout - main.bsa',
+    r'pointlookout - sounds.bsa',
+    r'zeta.esm',
+    r'zeta - main.bsa',
+    r'zeta - sounds.bsa',
     ))
 allBethFiles = set((
     #vanilla
-    'Credits.txt',
-    'Oblivion - Meshes.bsa',
-    'Oblivion - Misc.bsa',
-    'Oblivion - Sounds.bsa',
-    'Oblivion - Textures - Compressed.bsa',
-    'Oblivion - Voices1.bsa',
-    'Oblivion - Voices2.bsa',
-    'Oblivion.esm',
-    'Music\Battle\battle_01.mp3',
-    'Music\Battle\battle_02.mp3',
-    'Music\Battle\battle_03.mp3',
-    'Music\Battle\battle_04.mp3',
-    'Music\Battle\battle_05.mp3',
-    'Music\Battle\battle_06.mp3',
-    'Music\Battle\battle_07.mp3',
-    'Music\Battle\battle_08.mp3',
-    'Music\Dungeon\Dungeon_01_v2.mp3',
-    'Music\Dungeon\dungeon_02.mp3',
-    'Music\Dungeon\dungeon_03.mp3',
-    'Music\Dungeon\dungeon_04.mp3',
-    'Music\Dungeon\dungeon_05.mp3',
-    'Music\Explore\atmosphere_01.mp3',
-    'Music\Explore\atmosphere_03.mp3',
-    'Music\Explore\atmosphere_04.mp3',
-    'Music\Explore\atmosphere_06.mp3',
-    'Music\Explore\atmosphere_07.mp3',
-    'Music\Explore\atmosphere_08.mp3',
-    'Music\Explore\atmosphere_09.mp3',
-    'Music\Public\town_01.mp3',
-    'Music\Public\town_02.mp3',
-    'Music\Public\town_03.mp3',
-    'Music\Public\town_04.mp3',
-    'Music\Public\town_05.mp3',
-    'Music\Special\death.mp3',
-    'Music\Special\success.mp3',
-    'Music\Special\tes4title.mp3',
-    'Shaders\shaderpackage001.sdp',
-    'Shaders\shaderpackage002.sdp',
-    'Shaders\shaderpackage003.sdp',
-    'Shaders\shaderpackage004.sdp',
-    'Shaders\shaderpackage005.sdp',
-    'Shaders\shaderpackage006.sdp',
-    'Shaders\shaderpackage007.sdp',
-    'Shaders\shaderpackage008.sdp',
-    'Shaders\shaderpackage009.sdp',
-    'Shaders\shaderpackage010.sdp',
-    'Shaders\shaderpackage011.sdp',
-    'Shaders\shaderpackage012.sdp',
-    'Shaders\shaderpackage013.sdp',
-    'Shaders\shaderpackage014.sdp',
-    'Shaders\shaderpackage015.sdp',
-    'Shaders\shaderpackage016.sdp',
-    'Shaders\shaderpackage017.sdp',
-    'Shaders\shaderpackage018.sdp',
-    'Shaders\shaderpackage019.sdp',
-    'Video\2k games.bik',
-    'Video\bethesda softworks HD720p.bik',
-    'Video\CreditsMenu.bik',
-    'Video\game studios.bik',
-    'Video\Map loop.bik',
-    'Video\Oblivion iv logo.bik',
-    'Video\Oblivion Legal.bik',
-    'Video\OblivionIntro.bik',
-    'Video\OblivionOutro.bik',
-    #SI
-    'DLCShiveringIsles - Meshes.bsa',
-    'DLCShiveringIsles - Textures.bsa',
-    'DLCShiveringIsles - Sounds.bsa',
-    'DLCShiveringIsles - Voices.bsa',
-    'DLCShiveringIsles.esp',
-    'Textures\Effects\TerrainNoise.dds',
+    r'Credits.txt',
+    r'CreditsWacky.txt',
+    r'Fallout3.esm',
+    r'Fallout - MenuVoices.bsa',
+    r'Fallout - Meshes.bsa',
+    r'Fallout - Misc.bsa',
+    r'Fallout - Sound.bsa',
+    r'Fallout - Textures.bsa',
+    r'Fallout - Voices.bsa',
+    r'LODSettings\aaaForgotten1.DLODSettings',
+    r'LODSettings\aaaForgotten4.DLODSettings',
+    r'LODSettings\aaaForgotten5.DLODSettings',
+    r'Music\Base\Base_01.mp3',
+    r'Music\Base\Base_02.mp3',
+    r'Music\Base\Base_03.mp3',
+    r'Music\Base\Base_04.mp3',
+    r'Music\Battle\Battle_01.mp3',
+    r'Music\Battle\Battle_02.mp3',
+    r'Music\Battle\Battle_03.mp3',
+    r'Music\Battle\Battle_04.mp3',
+    r'Music\Battle\Battle_05.mp3',
+    r'Music\Battle\Battle_06.mp3',
+    r'Music\Battle\Battle_07.mp3',
+    r'Music\Battle\Finale\Battle_01.mp3',
+    r'Music\Battle\Finale\Battle_02.mp3',
+    r'Music\Battle\Finale\Battle_03.mp3',
+    r'Music\Battle\Finale\Battle_04.mp3',
+    r'Music\Battle\Finale\Battle_05.mp3',
+    r'Music\Battle\Finale\Battle_06.mp3',
+    r'Music\Battle\Finale\Battle_07.mp3',
+    r'Music\Dungeon\Dungeon_01.mp3',
+    r'Music\Dungeon\Dungeon_02.mp3',
+    r'Music\Dungeon\Dungeon_03.mp3',
+    r'Music\Dungeon\Dungeon_04.mp3',
+    r'Music\Dungeon\Dungeon_05.mp3',
+    r'Music\Endgame\Endgame_01.mp3',
+    r'Music\Endgame\Endgame_02.mp3',
+    r'Music\Endgame\Endgame_03.mp3',
+    r'Music\Endgame\Endgame_04.mp3',
+    r'Music\Endgame\Endgame_05.mp3',
+    r'Music\Endgame\Endgame_06.mp3',
+    r'Music\Endgame\Endgame_07.mp3',
+    r'Music\Endgame\Endgame_08.mp3',
+    r'Music\Endgame\Endgame_09.mp3',
+    r'Music\Endgame\Endgame_11.mp3',
+    r'Music\Endgame\Endgame_12.mp3',
+    r'Music\Endgame\Endgame_14.mp3',
+    r'Music\Endgame\Endgame_15.mp3',
+    r'Music\Endgame\Endgame_17.mp3',
+    r'Music\Endgame\Endgame_18.mp3',
+    r'Music\Endgame\Endgame_19.mp3',
+    r'Music\Explore\Explore_01.mp3',
+    r'Music\Explore\Explore_02.mp3',
+    r'Music\Explore\Explore_03.mp3',
+    r'Music\Explore\Explore_04.mp3',
+    r'Music\Explore\Explore_05.mp3',
+    r'Music\Explore\Explore_06.mp3',
+    r'Music\Explore\Explore_07.mp3',
+    r'Music\Public\Public_01.mp3',
+    r'Music\Public\Public_02.mp3',
+    r'Music\Public\Public_03.mp3',
+    r'Music\Public\Public_04.mp3',
+    r'Music\Public\Public_05.mp3',
+    r'Music\Special\Death.mp3',
+    r'Music\Special\ExitTheVault.mp3',
+    r'Music\Special\MainTitle.mp3',
+    r'Music\Special\Success.mp3',
+    r'Music\Tension\Tension_01.mp3',
+    r'Music\TranquilityLane\MUS_TranquilityLane_01_LP.mp3',
+    r'Music\TranquilityLane\MUS_TranquilityLane_02_LP.mp3',
+    r'Shaders\shaderpackage002.sdp',
+    r'Shaders\shaderpackage003.sdp',
+    r'Shaders\shaderpackage004.sdp',
+    r'Shaders\shaderpackage006.sdp',
+    r'Shaders\shaderpackage007.sdp',
+    r'Shaders\shaderpackage009.sdp',
+    r'Shaders\shaderpackage010.sdp',
+    r'Shaders\shaderpackage011.sdp',
+    r'Shaders\shaderpackage012.sdp',
+    r'Shaders\shaderpackage013.sdp',
+    r'Shaders\shaderpackage014.sdp',
+    r'Shaders\shaderpackage015.sdp',
+    r'Shaders\shaderpackage016.sdp',
+    r'Shaders\shaderpackage017.sdp',
+    r'Shaders\shaderpackage018.sdp',
+    r'Shaders\shaderpackage019.sdp',
+    r'Video\1 year later.bik',
+    r'Video\2 weeks later.bik',
+    r'Video\3 years later.bik',
+    r'Video\6 years later.bik',
+    r'Video\9 years later.bik',
+    r'Video\B01.bik',
+    r'Video\B02.bik',
+    r'Video\B03.bik',
+    r'Video\B04.bik',
+    r'Video\B05.bik',
+    r'Video\B06.bik',
+    r'Video\B07.bik',
+    r'Video\B08.bik',
+    r'Video\B09.bik',
+    r'Video\B10.bik',
+    r'Video\B11.bik',
+    r'Video\B12.bik',
+    r'Video\B13.bik',
+    r'Video\B14.bik',
+    r'Video\B15.bik',
+    r'Video\B16.bik',
+    r'Video\B17.bik',
+    r'Video\B18.bik',
+    r'Video\B19.bik',
+    r'Video\B20.bik',
+    r'Video\B21.bik',
+    r'Video\B22.bik',
+    r'Video\B23.bik',
+    r'Video\B24.bik',
+    r'Video\B25.bik',
+    r'Video\B26.bik',
+    r'Video\B27.bik',
+    r'Video\B28.bik',
+    r'Video\B29.bik',
+    r'Video\Fallout INTRO Vsk.bik',
     #DLCs
-    'Knights.bsa',
-    'Knights.esp',
-    'DLCList.txt',
+    r'anchorage.esm',
+    r'anchorage - main.bsa',
+    r'anchorage - sounds.bsa',
+    r'thepitt.esm',
+    r'thepitt - main.bsa',
+    r'thepitt - sounds.bsa',
+    r'brokensteel.esm',
+    r'brokensteel - main.bsa',
+    r'brokensteel - sounds.bsa',
+    r'pointlookout.esm',
+    r'pointlookout - main.bsa',
+    r'pointlookout - sounds.bsa',
+    r'zeta.esm',
+    r'zeta - main.bsa',
+    r'zeta - sounds.bsa',
+    r'DLCList.txt',
     ))
     
 # Balo Canonical Groups -------------------------------------------------------
@@ -166,301 +270,435 @@ groupTypes = [
 ]
 
 #--Top types in Oblivion order.
-topTypes = ['GMST', 'GLOB', 'CLAS', 'FACT', 'HAIR', 'EYES', 'RACE', 'SOUN', 'SKIL',
-    'MGEF', 'SCPT', 'LTEX', 'ENCH', 'SPEL', 'BSGN', 'ACTI', 'APPA', 'ARMO', 'BOOK',
-    'CLOT', 'CONT', 'DOOR', 'INGR', 'LIGH', 'MISC', 'STAT', 'GRAS', 'TREE', 'FLOR',
-    'FURN', 'WEAP', 'AMMO', 'NPC_', 'CREA', 'LVLC', 'SLGM', 'KEYM', 'ALCH', 'SBSP',
-    'SGST', 'LVLI', 'WTHR', 'CLMT', 'REGN', 'CELL', 'WRLD', 'DIAL', 'QUST', 'IDLE',
-    'PACK', 'CSTY', 'LSCR', 'LVSP', 'ANIO', 'WATR', 'EFSH']
+# topTypes = ['GMST', 'GLOB', 'CLAS', 'FACT', 'HAIR', 'EYES', 'RACE', 'SOUN', 'SKIL',
+#     'MGEF', 'SCPT', 'LTEX', 'ENCH', 'SPEL', 'BSGN', 'ACTI', 'APPA', 'ARMO', 'BOOK',
+#     'CLOT', 'CONT', 'DOOR', 'INGR', 'LIGH', 'MISC', 'STAT', 'GRAS', 'TREE', 'FLOR',
+#     'FURN', 'WEAP', 'AMMO', 'NPC_', 'CREA', 'LVLC', 'SLGM', 'KEYM', 'ALCH', 'SBSP',
+#     'SGST', 'LVLI', 'WTHR', 'CLMT', 'REGN', 'CELL', 'WRLD', 'DIAL', 'QUST', 'IDLE',
+#     'PACK', 'CSTY', 'LSCR', 'LVSP', 'ANIO', 'WATR', 'EFSH']
+
+#--Top types in Fallout3 order.
+topTypes = ['GMST', 'TXST', 'MICN', 'GLOB', 'CLAS', 'FACT', 'HDPT', 'HAIR', 'EYES',
+    'RACE', 'SOUN', 'ASPC', 'MGEF', 'SCPT', 'LTEX', 'ENCH', 'SPEL', 'ACTI', 'TACT',
+    'TERM', 'ARMO', 'BOOK', 'CONT', 'DOOR', 'INGR', 'LIGH', 'MISC', 'STAT', 'SCOL',
+    'MSTT', 'PWAT', 'GRAS', 'TREE', 'FURN', 'WEAP', 'AMMO', 'NPC_', 'CREA', 'LVLC',
+    'LVLN', 'KEYM', 'ALCH', 'IDLM', 'NOTE', 'COBJ', 'PROJ', 'LVLI', 'WTHR', 'CLMT',
+    'REGN', 'NAVI', 'CELL', 'WRLD', 'DIAL', 'QUST', 'IDLE', 'PACK', 'CSTY', 'LSCR',
+    'ANIO', 'WATR', 'EFSH', 'EXPL', 'DEBR', 'IMGS', 'IMAD', 'FLST', 'PERK', 'BPTD',
+    'ADDN', 'AVIF', 'RADS', 'CAMS', 'CPTH', 'VTYP', 'IPCT', 'IPDS', 'ARMA', 'ECZN',
+    'MESG', 'RGDL', 'DOBJ', 'LGTM', 'MUSC',
+    # Unused types in fallout3. (dummy)
+    'SLGM', 'BSGN', 'FLOR', 'SGST', 'CLOT', 'SBSP', 'SKIL', 'LVSP', 'APPA',
+    ]
+
+# Added topTypes are...
+# ['BPTD', 'VTYP', 'MUSC', 'FLST', 'PWAT', 'MICN', 'AVIF', 'NOTE', 'TERM', 'ASPC',
+#  'PERK', 'HDPT', 'TXST', 'DOBJ', 'NAVI', 'EXPL', 'IPDS', 'IDLM', 'ARMA', 'LVLN',
+#  'MSTT', 'IMAD', 'TACT', 'RGDL', 'CPTH', 'IMGS', 'MESG', 'DEBR', 'LGTM', 'SCOL',
+#  'ECZN', 'CAMS', 'RADS', 'PROJ', 'IPCT', 'ADDN', 'COBJ']
+#
+# Removed topTypes are...
+# ['SLGM', 'BSGN', 'FLOR', 'SGST', 'CLOT', 'SBSP', 'SKIL', 'LVSP', 'APPA']
 
 #--Dict mapping 'ignored' top types to un-ignored top types.
 topIgTypes = dict([(struct.pack('I',(struct.unpack('I',type)[0]) | 0x1000),type) for type in topTypes])
 
-recordTypes = set(topTypes + 'GRUP,TES4,ROAD,REFR,ACHR,ACRE,PGRD,LAND,INFO'.split(','))
+recordTypes = set(topTypes + 'GRUP,TES4,ROAD,REFR,ACHR,ACRE,PGRD,LAND,INFO,PGRE,NAVM'.split(','))
 
 # Id Functions ----------------------------------------------------------------
 def getIdFunc(modName):
     return lambda x: (GPath(modName),x)
 
-ob = getIdFunc('Oblivion.esm')
+ob = getIdFunc('fallout3.esm')
 cobl = getIdFunc('Cobl Main.esm')
 
 # Race Info -------------------------------------------------------------------
 raceNames = {
-    0x23fe9 : _('Argonian'),
-    0x224fc : _('Breton'),
-    0x191c1 : _('Dark Elf'),
-    0x19204 : _('High Elf'),
-    0x00907 : _('Imperial'),
-    0x22c37 : _('Khajiit'),
-    0x224fd : _('Nord'),
-    0x191c0 : _('Orc'),
-    0x00d43 : _('Redguard'),
-    0x00019 : _('Vampire'),
-    0x223c8 : _('Wood Elf'),
+    0x000019 : _('Caucasian'),
+    0x0038e5 : _('Hispanic'),
+    0x0038e6 : _('Asian'),
+    0x003b3e : _('Ghoul'),
+    0x00424a : _('AfricanAmerican'),
+    0x0042be : _('AfricanAmerican Child'),
+    0x0042bf : _('AfricanAmerican Old'),
+    0x0042c0 : _('Asian Child'),
+    0x0042c1 : _('Asian Old'),
+    0x0042c2 : _('Caucasian Child'),
+    0x0042c3 : _('Caucasian Old'),
+    0x0042c4 : _('Hispanic Child'),
+    0x0042c5 : _('Hispanic Old'),
+    0x04bb8d : _('Caucasian Raider'),
+    0x04bf70 : _('Hispanic Raider'),
+    0x04bf71 : _('Asian Raider'),
+    0x04bf72 : _('AfricanAmerican Raider'),
+    0x0987dc : _('Hispanic Old Aged'),
+    0x0987dd : _('Asian Old Aged'),
+    0x0987de : _('AfricanAmerican Old Aged'),
+    0x0987df : _('Caucasian Old Aged'),
     }
 
 raceShortNames = {
-    0x23fe9 : 'Arg',
-    0x224fc : 'Bre',
-    0x191c1 : 'Dun',
-    0x19204 : 'Alt',
-    0x00907 : 'Imp',
-    0x22c37 : 'Kha',
-    0x224fd : 'Nor',
-    0x191c0 : 'Orc',
-    0x00d43 : 'Red',
-    0x223c8 : 'Bos',
+    0x000019 : 'Cau',
+    0x0038e5 : 'His',
+    0x0038e6 : 'Asi',
+    0x003b3e : 'Gho',
+    0x00424a : 'Afr',
+    0x0042be : 'AfC',
+    0x0042bf : 'AfO',
+    0x0042c0 : 'AsC',
+    0x0042c1 : 'AsO',
+    0x0042c2 : 'CaC',
+    0x0042c3 : 'CaO',
+    0x0042c4 : 'HiC',
+    0x0042c5 : 'HiO',
+    0x04bb8d : 'CaR',
+    0x04bf70 : 'HiR',
+    0x04bf71 : 'AsR',
+    0x04bf72 : 'AfR',
+    0x0987dc : 'HOA',
+    0x0987dd : 'AOA',
+    0x0987de : 'FOA',
+    0x0987df : 'COA',
     }
 
 raceHairMale = {
-    0x23fe9 : 0x64f32, #--Arg
-    0x224fc : 0x90475, #--Bre
-    0x191c1 : 0x64214, #--Dun
-    0x19204 : 0x7b792, #--Alt
-    0x00907 : 0x90475, #--Imp
-    0x22c37 : 0x653d4, #--Kha
-    0x224fd : 0x1da82, #--Nor
-    0x191c0 : 0x66a27, #--Orc
-    0x00d43 : 0x64215, #--Red
-    0x223c8 : 0x690bc, #--Bos
+    0x000019 : 0x014b90, #--Cau
+    0x0038e5 : 0x0a9d6f, #--His
+    0x0038e6 : 0x014b90, #--Asi
+    0x003b3e : None, #--Gho
+    0x00424a : 0x0306be, #--Afr
+    0x0042be : 0x060232, #--AfC
+    0x0042bf : 0x0306be, #--AfO
+    0x0042c0 : 0x060232, #--AsC
+    0x0042c1 : 0x014b90, #--AsO
+    0x0042c2 : 0x060232, #--CaC
+    0x0042c3 : 0x02bfdb, #--CaO
+    0x0042c4 : 0x060232, #--HiC
+    0x0042c5 : 0x02ddee, #--HiO
+    0x04bb8d : 0x02bfdb, #--CaR
+    0x04bf70 : 0x02bfdb, #--HiR
+    0x04bf71 : 0x02bfdb, #--AsR
+    0x04bf72 : 0x0306be, #--AfR
+    0x0987dc : 0x0987da, #--HOA
+    0x0987dd : 0x0987da, #--AOA
+    0x0987de : 0x0987d9, #--FOA
+    0x0987df : 0x0987da, #--COA
     }
 
 raceHairFemale = {
-    0x23fe9 : 0x64f33, #--Arg
-    0x224fc : 0x1da83, #--Bre
-    0x191c1 : 0x1da83, #--Dun
-    0x19204 : 0x690c2, #--Alt
-    0x00907 : 0x1da83, #--Imp
-    0x22c37 : 0x653d0, #--Kha
-    0x224fd : 0x1da83, #--Nor
-    0x191c0 : 0x64218, #--Orc
-    0x00d43 : 0x64210, #--Red
-    0x223c8 : 0x69473, #--Bos
+    0x000019 : 0x05dc6b, #--Cau
+    0x0038e5 : 0x05dc76, #--His
+    0x0038e6 : 0x022e50, #--Asi
+    0x003b3e : None, #--Gho
+    0x00424a : 0x05dc78, #--Afr
+    0x0042be : 0x05a59e, #--AfC
+    0x0042bf : 0x072e39, #--AfO
+    0x0042c0 : 0x05a5a3, #--AsC
+    0x0042c1 : 0x072e39, #--AsO
+    0x0042c2 : 0x05a59e, #--CaC
+    0x0042c3 : 0x072e39, #--CaO
+    0x0042c4 : 0x05a59e, #--HiC
+    0x0042c5 : 0x072e39, #--HiO
+    0x04bb8d : 0x072e39, #--CaR
+    0x04bf70 : 0x072e39, #--HiR
+    0x04bf71 : 0x072e39, #--AsR
+    0x04bf72 : 0x072e39, #--AfR
+    0x0987dc : 0x044529, #--HOA
+    0x0987dd : 0x044529, #--AOA
+    0x0987de : 0x044529, #--FOA
+    0x0987df : 0x044529, #--COA
     }
 
 # Default Eyes/Hair -----------------------------------------------------------
-standardEyes = [ob(x) for x in (0x27306,0x27308,0x27309)] + [cobl(x) for x in (0x000821, 0x000823, 0x000825, 0x000828, 0x000834, 0x000837, 0x000839, 0x00084F, )]
+#standardEyes = [ob(x) for x in (0x27306,0x27308,0x27309)] + [cobl(x) for x in (0x000821, 0x000823, 0x000825, 0x000828, 0x000834, 0x000837, 0x000839, 0x00084F, )]
+standardEyes = [ob(x) for x in (0x4252,0x4253,0x4254,0x4255,0x4256)]
 
 defaultEyes = {
-    #--Oblivion.esm
-    ob(0x23FE9): #--Argonian
-        [ob(0x3E91E)] + [cobl(x) for x in (0x01F407, 0x01F408, 0x01F40B, 0x01F40C, 0x01F410, 0x01F411, 0x01F414, 0x01F416, 0x01F417, 0x01F41A, 0x01F41B, 0x01F41E, 0x01F41F, 0x01F422, 0x01F424, )],
-    ob(0x0224FC): #--Breton
+    #--fallout3.esm
+    ob(0x000019): #--Caucasian
+        standardEyes,
+    ob(0x0038e5): #--Hispanic
+        standardEyes,
+    ob(0x0038e6): #--Asian
+        standardEyes,
+    ob(0x003b3e): #--Ghoul
+        [ob(0x35e4f)],
+    ob(0x00424a): #--AfricanAmerican
+        standardEyes,
+    ob(0x0042be): #--AfricanAmerican Child
+        standardEyes,
+    ob(0x0042bf): #--AfricanAmerican Old
+        standardEyes,
+    ob(0x0042c0): #--Asian Child
+        standardEyes,
+    ob(0x0042c1): #--Asian Old
+        standardEyes,
+    ob(0x0042c2): #--Caucasian Child
+        standardEyes,
+    ob(0x0042c3): #--Caucasian Old
+        standardEyes,
+    ob(0x0042c4): #--Hispanic Child
         standardEyes,
-    ob(0x0191C1): #--Dark Elf
-        [ob(0x27307)] + [cobl(x) for x in (0x000861,0x000864,0x000851)],
-    ob(0x019204): #--High Elf
+    ob(0x0042c5): #--Hispanic Old
         standardEyes,
-    ob(0x000907): #--Imperial
+    ob(0x04bb8d): #--Caucasian Raider
+        [ob(0x4cb10)],
+    ob(0x04bf70): #--Hispanic Raider
+        [ob(0x4cb10)],
+    ob(0x04bf71): #--Asian Raider
+        [ob(0x4cb10)],
+    ob(0x04bf72): #--AfricanAmerican Raider
+        [ob(0x4cb10)],
+    ob(0x0987dc): #--Hispanic Old Aged
         standardEyes,
-    ob(0x022C37): #--Khajiit
-        [ob(0x375c8)] + [cobl(x) for x in (0x00083B, 0x00083E, 0x000843, 0x000846, 0x000849, 0x00084C, )],
-    ob(0x0224FD): #--Nord
+    ob(0x0987dd): #--Asian Old Aged
         standardEyes,
-    ob(0x0191C0): #--Orc
-        [ob(0x2730A)]+[cobl(x) for x in (0x000853, 0x000855, 0x000858, 0x00085A, 0x00085C, 0x00085E, )],
-    ob(0x000D43): #--Redguard
+    ob(0x0987de): #--AfricanAmerican Old Aged
         standardEyes,
-    ob(0x0223C8): #--Wood Elf
+    ob(0x0987df): #--Caucasian Old Aged
         standardEyes,
-    #--Cobl
-    cobl(0x07948): #--cobRaceAureal
-        [ob(0x54BBA)],
-    cobl(0x02B60): #--cobRaceHidden
-        [cobl(x) for x in (0x01F43A, 0x01F438, 0x01F439, 0x0015A7, 0x01792C, 0x0015AC, 0x0015A8, 0x0015AB, 0x0015AA,)],
-    cobl(0x07947): #--cobRaceMazken
-        [ob(0x54BB9)],
-    cobl(0x1791B): #--cobRaceOhmes
-        [cobl(x) for x in (0x017901, 0x017902, 0x017903, 0x017904, 0x017905, 0x017906, 0x017907, 0x017908, 0x017909, 0x01790A, 0x01790B, 0x01790C, 0x01790D, 0x01790E, 0x01790F, 0x017910, 0x017911, 0x017912, 0x017913, 0x017914, 0x017915, 0x017916, 0x017917, 0x017918, 0x017919, 0x01791A, 0x017900,)],
-    cobl(0x1F43C): #--cobRaceXivilai
-        [cobl(x) for x in (0x01F437, 0x00531B, 0x00531C, 0x00531D, 0x00531E, 0x00531F, 0x005320, 0x005321, 0x01F43B, 0x00DBE1, )],
     }
 
 # Function Info ---------------------------------------------------------------
 conditionFunctionData = ( #--0: no param; 1: int param; 2: formid param
-    (153, 'CanHaveFlames', 0, 0),
-    (127, 'CanPayCrimeGold', 0, 0),
-    ( 14, 'GetActorValue', 1, 0),
-    ( 61, 'GetAlarmed', 0, 0),
-    (190, 'GetAmountSoldStolen', 0, 0),
-    (  8, 'GetAngle', 1, 0),
-    ( 81, 'GetArmorRating', 0, 0),
-    (274, 'GetArmorRatingUpperBody', 0, 0),
-    ( 63, 'GetAttacked', 0, 0),
-    (264, 'GetBarterGold', 0, 0),
-    (277, 'GetBaseActorValue', 1, 0),
-    (229, 'GetClassDefaultMatch', 0, 0),
-    ( 41, 'GetClothingValue', 0, 0),
-    (122, 'GetCrime', 2, 1),
-    (116, 'GetCrimeGold', 0, 0),
-    (110, 'GetCurrentAIPackage', 0, 0),
-    (143, 'GetCurrentAIProcedure', 0, 0),
-    ( 18, 'GetCurrentTime', 0, 0),
-    (148, 'GetCurrentWeatherPercent', 0, 0),
-    (170, 'GetDayOfWeek', 0, 0),
-    ( 46, 'GetDead', 0, 0),
-    ( 84, 'GetDeadCount', 2, 0),
-    (203, 'GetDestroyed', 0, 0),
-    ( 45, 'GetDetected', 2, 0),
-    (180, 'GetDetectionLevel', 2, 0),
-    ( 35, 'GetDisabled', 0, 0),
-    ( 39, 'GetDisease', 0, 0),
-    ( 76, 'GetDisposition', 2, 0),
-    (  1, 'GetDistance', 2, 0),
-    (215, 'GetDoorDefaultOpen', 0, 0),
-    (182, 'GetEquipped', 2, 0),
-    ( 73, 'GetFactionRank', 2, 0),
-    ( 60, 'GetFactionRankDifference', 2, 2),
-    (128, 'GetFatiguePercentage', 0, 0),
-    (288, 'GetFriendHit', 2, 0),
-    (160, 'GetFurnitureMarkerID', 0, 0),
-    ( 74, 'GetGlobalValue', 2, 0),
-    ( 48, 'GetGold', 0, 0),
-    ( 99, 'GetHeadingAngle', 2, 0),
-    (318, 'GetIdleDoneOnce', 0, 0),
-    (338, 'GetIgnoreFriendlyHits', 0, 0),
-    ( 67, 'GetInCell', 2, 0),
-    (230, 'GetInCellParam', 2, 2),
-    ( 71, 'GetInFaction', 2, 0),
-    ( 32, 'GetInSameCell', 2, 0),
-    (305, 'GetInvestmentGold', 0, 0),
-    (310, 'GetInWorldspace', 2, 0),
-    ( 91, 'GetIsAlerted', 0, 0),
-    ( 68, 'GetIsClass', 2, 0),
-    (228, 'GetIsClassDefault', 2, 0),
-    ( 64, 'GetIsCreature', 0, 0),
-    (161, 'GetIsCurrentPackage', 2, 0),
-    (149, 'GetIsCurrentWeather', 2, 0),
-    (237, 'GetIsGhost', 0, 0),
-    ( 72, 'GetIsID', 2, 0),
-    (254, 'GetIsPlayableRace', 0, 0),
-    (224, 'GetIsPlayerBirthsign', 2, 0),
-    ( 69, 'GetIsRace', 2, 0),
-    (136, 'GetIsReference', 2, 0),
-    ( 70, 'GetIsSex', 1, 0),
-    (246, 'GetIsUsedItem', 2, 0),
-    (247, 'GetIsUsedItemType', 1, 0),
-    ( 47, 'GetItemCount', 2, 0),
-    (107, 'GetKnockedState', 0, 0),
-    ( 80, 'GetLevel', 0, 0),
-    ( 27, 'GetLineOfSight', 2, 0),
-    (  5, 'GetLocked', 0, 0),
-    ( 65, 'GetLockLevel', 0, 0),
-    (320, 'GetNoRumors', 0, 0),
-    (255, 'GetOffersServicesNow', 0, 0),
-    (157, 'GetOpenState', 0, 0),
-    (193, 'GetPCExpelled', 2, 0),
-    (199, 'GetPCFactionAttack', 2, 0),
-    (195, 'GetPCFactionMurder', 2, 0),
-    (197, 'GetPCFactionSteal', 2, 0),
-    (201, 'GetPCFactionSubmitAuthority', 2, 0),
-    (249, 'GetPCFame', 0, 0),
-    (132, 'GetPCInFaction', 2, 0),
-    (251, 'GetPCInfamy', 0, 0),
-    (129, 'GetPCIsClass', 2, 0),
-    (130, 'GetPCIsRace', 2, 0),
-    (131, 'GetPCIsSex', 1, 0),
-    (312, 'GetPCMiscStat', 1, 0),
-    (225, 'GetPersuasionNumber', 0, 0),
-    ( 98, 'GetPlayerControlsDisabled', 0, 0),
-    (365, 'GetPlayerInSEWorld',0,0),
-    (362, 'GetPlayerHasLastRiddenHorse', 0, 0),
-    (  6, 'GetPos', 1, 0),
-    ( 56, 'GetQuestRunning', 2, 0),
-    ( 79, 'GetQuestVariable', 2, 1),
-    ( 77, 'GetRandomPercent', 0, 0),
-    (244, 'GetRestrained', 0, 0),
-    ( 24, 'GetScale', 0, 0),
-    ( 53, 'GetScriptVariable', 2, 1),
-    ( 12, 'GetSecondsPassed', 0, 0),
-    ( 66, 'GetShouldAttack', 2, 0),
-    (159, 'GetSitting', 0, 0),
-    ( 49, 'GetSleeping', 0, 0),
-    ( 58, 'GetStage', 2, 0),
-    ( 59, 'GetStageDone', 2, 1),
-    ( 11, 'GetStartingAngle', 1, 0),
-    ( 10, 'GetStartingPos', 1, 0),
-    ( 50, 'GetTalkedToPC', 0, 0),
-    (172, 'GetTalkedToPCParam', 2, 0),
-    (361, 'GetTimeDead', 0, 0),
-    (315, 'GetTotalPersuasionNumber', 0, 0),
-    (144, 'GetTrespassWarningLevel', 0, 0),
-    (242, 'GetUnconscious', 0, 0),
-    (259, 'GetUsedItemActivate', 0, 0),
-    (258, 'GetUsedItemLevel', 0, 0),
-    ( 40, 'GetVampire', 0, 0),
-    (142, 'GetWalkSpeed', 0, 0),
-    (108, 'GetWeaponAnimType', 0, 0),
-    (109, 'GetWeaponSkillType', 0, 0),
-    (147, 'GetWindSpeed', 0, 0),
-    (154, 'HasFlames', 0, 0),
-    (214, 'HasMagicEffect', 2, 0),
-    (227, 'HasVampireFed', 0, 0),
-    (353, 'IsActor', 0, 0),
-    (314, 'IsActorAVictim', 0, 0),
-    (313, 'IsActorEvil', 0, 0),
-    (306, 'IsActorUsingATorch', 0, 0),
-    (280, 'IsCellOwner', 2, 2),
-    (267, 'IsCloudy', 0, 0),
-    (150, 'IsContinuingPackagePCNear', 0, 0),
-    (163, 'IsCurrentFurnitureObj', 2, 0),
-    (162, 'IsCurrentFurnitureRef', 2, 0),
-    (354, 'IsEssential', 0, 0),
-    (106, 'IsFacingUp', 0, 0),
-    (125, 'IsGuard', 0, 0),
-    (282, 'IsHorseStolen', 0, 0),
-    (112, 'IsIdlePlaying', 0, 0),
-    (289, 'IsInCombat', 0, 0),
-    (332, 'IsInDangerousWater', 0, 0),
-    (300, 'IsInInterior', 0, 0),
-    (146, 'IsInMyOwnedCell', 0, 0),
-    (285, 'IsLeftUp', 0, 0),
-    (278, 'IsOwner', 2, 0),
-    (176, 'IsPCAMurderer', 0, 0),
-    (175, 'IsPCSleeping', 0, 0),
-    (171, 'IsPlayerInJail', 0, 0),
-    (358, 'IsPlayerMovingIntoNewSpace', 0, 0),
-    (339, 'IsPlayersLastRiddenHorse', 0, 0),
-    (266, 'IsPleasant', 0, 0),
-    ( 62, 'IsRaining', 0, 0),
-    (327, 'IsRidingHorse', 0, 0),
-    (287, 'IsRunning', 0, 0),
-    (103, 'IsShieldOut', 0, 0),
-    (286, 'IsSneaking', 0, 0),
-    ( 75, 'IsSnowing', 0, 0),
-    (223, 'IsSpellTarget', 2, 0),
-    (185, 'IsSwimming', 0, 0),
-    (141, 'IsTalking', 0, 0),
-    (265, 'IsTimePassing', 0, 0),
-    (102, 'IsTorchOut', 0, 0),
-    (145, 'IsTrespassing', 0, 0),
-    (329, 'IsTurnArrest', 0, 0),
-    (111, 'IsWaiting', 0, 0),
-    (101, 'IsWeaponOut', 0, 0),
-    (309, 'IsXBox', 0, 0),
-    (104, 'IsYielding', 0, 0),
-    ( 36, 'MenuMode', 1, 0),
-    ( 42, 'SameFaction', 2, 0),
-    (133, 'SameFactionAsPC', 0, 0),
-    ( 43, 'SameRace', 2, 0),
-    (134, 'SameRaceAsPC', 0, 0),
-    ( 44, 'SameSex', 2, 0),
-    (135, 'SameSexAsPC', 0, 0),
-    (323, 'WhichServiceMenu', 0, 0),
+    (153, 'CanHaveFlames', 0, 0, 0, 0),
+    (127, 'HasBeenEatan', 0, 0, 0, 0),
+    ( 14, 'GetActorValue', 1, 0, 0, 0),
+    ( 61, 'GetAlarmed', 0, 0, 0, 0),
+    (190, 'GetAmountSoldStolen', 0, 0, 0, 0),
+    (  8, 'GetAngle', 1, 0, 0, 0),
+    ( 81, 'GetArmorRating', 0, 0, 0, 0),
+    (274, 'GetArmorRatingUpperBody', 0, 0, 0, 0),
+    ( 63, 'GetAttacked', 0, 0, 0, 0),
+    (264, 'GetBarterGold', 0, 0, 0, 0),
+    (277, 'GetBaseActorValue', 1, 0, 0, 0),
+    (229, 'GetClassDefaultMatch', 0, 0, 0, 0),
+    ( 41, 'GetClothingValue', 0, 0, 0, 0),
+    (122, 'GetCrime', 2, 1, 0, 0),
+    (116, 'GetMinorCrimeCount', 0, 0, 0, 0),
+    (110, 'GetCurrentAIPackage', 0, 0, 0, 0),
+    (143, 'GetCurrentAIProcedure', 0, 0, 0, 0),
+    ( 18, 'GetCurrentTime', 0, 0, 0, 0),
+    (148, 'GetCurrentWeatherPercent', 0, 0, 0, 0),
+    (170, 'GetDayOfWeek', 0, 0, 0, 0),
+    ( 46, 'GetDead', 0, 0, 0, 0),
+    ( 84, 'GetDeadCount', 2, 0, 0, 0),
+    (203, 'GetDestroyed', 0, 0, 0, 0),
+    ( 45, 'GetDetected', 2, 0, 0, 0),
+    (180, 'GetDetectionLevel', 2, 0, 0, 0),
+    ( 35, 'GetDisabled', 0, 0, 0, 0),
+    ( 39, 'GetDisease', 0, 0, 0, 0),
+    ( 76, 'GetDisposition', 2, 0, 0, 0),
+    (  1, 'GetDistance', 2, 0, 0, 0),
+    (215, 'GetDefaultOpen', 0, 0, 0, 0),
+    (182, 'GetEquipped', 2, 0, 0, 0),
+    ( 73, 'GetFactionRank', 2, 0, 0, 0),
+    ( 60, 'GetFactionRankDifference', 2, 2, 0, 0),
+    (128, 'GetFatiguePercentage', 0, 0, 0, 0),
+    (288, 'GetFriendHit', 2, 0, 0, 0),
+    (160, 'GetFurnitureMarkerID', 0, 0, 0, 0),
+    ( 74, 'GetGlobalValue', 2, 0, 0, 0),
+    ( 48, 'GetGold', 0, 0, 0, 0),
+    ( 99, 'GetHeadingAngle', 2, 0, 0, 0),
+    (318, 'GetIdleDoneOnce', 0, 0, 0, 0),
+    (338, 'GetIgnoreFriendlyHits', 0, 0, 0, 0),
+    ( 67, 'GetInCell', 2, 0, 0, 0),
+    (230, 'GetInCellParam', 2, 2, 0, 0),
+    ( 71, 'GetInFaction', 2, 0, 0, 0),
+    ( 32, 'GetInSameCell', 2, 0, 0, 0),
+    (310, 'GetInWorldspace', 2, 0, 0, 0),
+    ( 91, 'GetIsAlerted', 0, 0, 0, 0),
+    ( 68, 'GetIsClass', 2, 0, 0, 0),
+    (228, 'GetIsClassDefault', 2, 0, 0, 0),
+    ( 64, 'GetIsCreature', 0, 0, 0, 0),
+    (161, 'GetIsCurrentPackage', 2, 0, 0, 0),
+    (149, 'GetIsCurrentWeather', 2, 0, 0, 0),
+    (237, 'GetIsGhost', 0, 0, 0, 0),
+    ( 72, 'GetIsID', 2, 0, 0, 0),
+    (254, 'GetIsPlayableRace', 0, 0, 0, 0),
+    (224, 'GetVATSMode', 0, 0, 0, 0),
+    ( 69, 'GetIsRace', 2, 0, 0, 0),
+    (136, 'GetIsReference', 2, 0, 0, 0),
+    ( 70, 'GetIsSex', 1, 0, 0, 0),
+    (246, 'GetIsUsedItem', 2, 0, 0, 0),
+    (247, 'GetIsUsedItemType', 1, 0, 0, 0),
+    ( 47, 'GetItemCount', 2, 0, 0, 0),
+    (107, 'GetKnockedState', 0, 0, 0, 0),
+    ( 80, 'GetLevel', 0, 0, 0, 0),
+    ( 27, 'GetLineOfSight', 2, 0, 0, 0),
+    (  5, 'GetLocked', 0, 0, 0, 0),
+    ( 65, 'GetLockLevel', 0, 0, 0, 0),
+    (320, 'GetNoRumors', 0, 0, 0, 0),
+    (255, 'GetOffersServicesNow', 0, 0, 0, 0),
+    (157, 'GetOpenState', 0, 0, 0, 0),
+    (193, 'GetPCExpelled', 2, 0, 0, 0),
+    (199, 'GetPCFactionAttack', 2, 0, 0, 0),
+    (195, 'GetPCFactionMurder', 2, 0, 0, 0),
+    (197, 'GetPCEnemyofFaction', 2, 0, 0, 0),
+    (132, 'GetPCInFaction', 2, 0, 0, 0),
+    (129, 'GetPCIsClass', 2, 0, 0, 0),
+    (130, 'GetPCIsRace', 2, 0, 0, 0),
+    (131, 'GetPCIsSex', 1, 0, 0, 0),
+    (312, 'GetPCMiscStat', 1, 0, 0, 0),
+    (225, 'GetPersuasionNumber', 0, 0, 0, 0),
+    ( 98, 'GetPlayerControlsDisabled', 0, 0, 0, 0),
+    (365, 'IsChild', 0, 0, 0, 0),
+    (362, 'GetPlayerHasLastRiddenHorse', 0, 0, 0, 0),
+    (  6, 'GetPos', 1, 0, 0, 0),
+    ( 56, 'GetQuestRunning', 2, 0, 0, 0),
+    ( 79, 'GetQuestVariable', 2, 1, 0, 0),
+    ( 77, 'GetRandomPercent', 0, 0, 0, 0),
+    (244, 'GetRestrained', 0, 0, 0, 0),
+    ( 24, 'GetScale', 0, 0, 0, 0),
+    ( 53, 'GetScriptVariable', 2, 1, 0, 0),
+    ( 12, 'GetSecondsPassed', 0, 0, 0, 0),
+    ( 66, 'GetShouldAttack', 2, 0, 0, 0),
+    (159, 'GetSitting', 0, 0, 0, 0),
+    ( 49, 'GetSleeping', 0, 0, 0, 0),
+    ( 58, 'GetStage', 2, 0, 0, 0),
+    ( 59, 'GetStageDone', 2, 1, 0, 0),
+    ( 11, 'GetStartingAngle', 1, 0, 0, 0),
+    ( 10, 'GetStartingPos', 1, 0, 0, 0),
+    ( 50, 'GetTalkedToPC', 0, 0, 0, 0),
+    (172, 'GetTalkedToPCParam', 2, 0, 0, 0),
+    (361, 'GetTimeDead', 0, 0, 0, 0),
+    (315, 'GetTotalPersuasionNumber', 0, 0, 0, 0),
+    (144, 'GetTrespassWarningLevel', 0, 0, 0, 0),
+    (242, 'GetUnconscious', 0, 0, 0, 0),
+    (259, 'GetUsedItemActivate', 0, 0, 0, 0),
+    (258, 'GetUsedItemLevel', 0, 0, 0, 0),
+    ( 40, 'GetVampire', 0, 0, 0, 0),
+    (142, 'GetWalkSpeed', 0, 0, 0, 0),
+    (108, 'GetWeaponAnimType', 0, 0, 0, 0),
+    (109, 'IsWeaponSkillType', 1, 0, 0, 0),
+    (147, 'GetWindSpeed', 0, 0, 0, 0),
+    (154, 'HasFlames', 0, 0, 0, 0),
+    (214, 'HasMagicEffect', 2, 0, 0, 0),
+    (227, 'HasCannibal', 0, 0, 0, 0),
+    (353, 'IsActor', 0, 0, 0, 0),
+    (314, 'IsActorAVictim', 0, 0, 0, 0),
+    (313, 'IsActorEvil', 0, 0, 0, 0),
+    (306, 'IsActorUsingATorch', 0, 0, 0, 0),
+    (280, 'IsCellOwner', 2, 2, 0, 0),
+    (267, 'IsCloudy', 0, 0, 0, 0),
+    (150, 'IsContinuingPackagePCNear', 0, 0, 0, 0),
+    (163, 'IsCurrentFurnitureObj', 2, 0, 0, 0),
+    (162, 'IsCurrentFurnitureRef', 2, 0, 0, 0),
+    (354, 'IsEssential', 0, 0, 0, 0),
+    (106, 'IsFacingUp', 0, 0, 0, 0),
+    (125, 'IsGuard', 0, 0, 0, 0),
+    (282, 'IsHorseStolen', 0, 0, 0, 0),
+    (112, 'IsIdlePlaying', 0, 0, 0, 0),
+    (289, 'IsInCombat', 0, 0, 0, 0),
+    (332, 'IsInDangerousWater', 0, 0, 0, 0),
+    (300, 'IsInInterior', 0, 0, 0, 0),
+    (146, 'IsInMyOwnedCell', 0, 0, 0, 0),
+    (285, 'IsLeftUp', 0, 0, 0, 0),
+    (278, 'IsOwner', 2, 0, 0, 0),
+    (176, 'IsPCAMurderer', 0, 0, 0, 0),
+    (175, 'IsPCSleeping', 0, 0, 0, 0),
+    (358, 'IsPlayerMovingIntoNewSpace', 0, 0, 0, 0),
+    (339, 'IsPlayersLastRiddenHorse', 0, 0, 0, 0),
+    (266, 'IsPleasant', 0, 0, 0, 0),
+    ( 62, 'IsRaining', 0, 0, 0, 0),
+    (327, 'IsRidingHorse', 0, 0, 0, 0),
+    (287, 'IsRunning', 0, 0, 0, 0),
+    (103, 'IsShieldOut', 0, 0, 0, 0),
+    (286, 'IsSneaking', 0, 0, 0, 0),
+    ( 75, 'IsSnowing', 0, 0, 0, 0),
+    (223, 'IsSpellTarget', 2, 0, 0, 0),
+    (185, 'IsSwimming', 0, 0, 0, 0),
+    (141, 'IsTalking', 0, 0, 0, 0),
+    (265, 'IsTimePassing', 0, 0, 0, 0),
+    (102, 'IsTorchOut', 0, 0, 0, 0),
+    (145, 'IsTrespassing', 0, 0, 0, 0),
+    (111, 'IsWaiting', 0, 0, 0, 0),
+    (101, 'IsWeaponOut', 0, 0, 0, 0),
+    (309, 'IsXBox', 0, 0, 0, 0),
+    ( 36, 'MenuMode', 1, 0, 0, 0),
+    ( 42, 'SameFaction', 2, 0, 0, 0),
+    (133, 'SameFactionAsPC', 0, 0, 0, 0),
+    ( 43, 'SameRace', 2, 0, 0, 0),
+    (134, 'SameRaceAsPC', 0, 0, 0, 0),
+    ( 44, 'SameSex', 2, 0, 0, 0),
+    (135, 'SameSexAsPC', 0, 0, 0, 0),
+    (323, 'WhichServiceMenu', 0, 0, 0, 0),
+    (449, 'HasPerk', 2, 1, 1, 2),
+    (546, 'GetQuestCompleted', 2, 0, 0, 0),
+    (427, 'GetIsVoiceType', 2, 0, 0, 0),
+    (523, 'IsPS3', 0, 0, 0, 0),
+    (524, 'IsWin32', 0, 0, 0, 0),
+    (372, 'IsInList', 2, 0, 0, 0),
+    (382, 'GetHasNote', 2, 1, 1, 2),
+    (492, 'GetMapMakerVisible', 1, 1, 1, 2),
+    (446, 'GetInZone', 2, 1, 1, 2),
+    ( 25, 'IsMoving', 0, 0, 0, 0),
+    ( 26, 'IsTurning', 0, 0, 0, 0),
+    (451, 'IsLastIdlePlayed', 2, 0, 0, 0),
+    (399, 'IsWeaponInList', 2, 0, 0, 0),
+    (408, 'GetVATSValue', 1, 2, 0, 0),
+    (435, 'GetDialogueEmotion', 0, 0, 0, 0),
+    (235, 'GetVatsTargetHeight', 0, 0, 0, 0),
+    (391, 'GetHitLocation', 0, 0, 0, 0),
+    (392, 'IsPC1stPerson', 0, 0, 0, 0),
+    (226, 'GetSandman', 0, 0, 0, 0),
+    (428, 'GetPlantedExplosive', 0, 0, 0, 0),
+    (304, 'IsWaterObject', 0, 0, 0, 0),
+    (123, 'IsGreetingPlayer', 0, 0, 0, 0),
+    (438, 'GetIsCreatureType', 1, 0, 0, 0),
+    (503, 'GetRadiationLevel', 0, 0, 0, 0),
+    (431, 'GetHealthPercentage', 0, 0, 0, 0),
+    (411, 'GetFactionCombatReaction', 2, 2, 0, 0),
+    (515, 'IsCombatTarget', 2, 0, 0, 0),
+    (495, 'GetPermanentActorValue', 1, 0, 0, 0),
+    (474, 'GetIsAlignment', 1, 0, 0, 0),
+    (454, 'GetPlayerTeammate', 0, 0, 0, 0),
+    (522, 'GetIsLockBroken', 0, 0, 0, 0),
+    (433, 'GetIsObjectType', 1, 0, 0, 0),
+    (500, 'GetWeaponHealthPerc', 0, 0, 0, 0),
+    (368, 'IsPlayerActionActive', 1, 0, 0, 0),
+    (416, 'GetGroupMemberCount', 0, 0, 0, 0),
+    (417, 'GetGroupTargetCount', 0, 0, 0, 0),
+    (510, 'GetLastHitCritical', 0, 0, 0, 0),
+    (450, 'GetFactionRelation', 1, 0, 0, 0),
+    (455, 'GetPlayerTeammateCount', 0, 0, 0, 0),
+    (219, 'GetAnimAction', 0, 0, 0, 0),
+    (430, 'IsActorTalkingThroughActivator', 0, 0, 0, 0),
+    (480, 'GetIsUsedItemEquipType', 1, 0, 0, 0),
+    (398, 'IsLimbGone', 1, 0, 0, 0),
+    (550, 'IsGoreDisabled', 0, 0, 0, 0),
+    (420, 'GetObjectiveCompleted', 2, 1, 0, 0),
+    (421, 'GetObjectiveDisplayed', 2, 1, 0, 0),
+    (397, 'GetCauseofDeath', 0, 0, 0, 0),
+    (415, 'Exists', 2, 0, 0, 0),
+    (117, 'GetMajorCrimeCount', 0, 0, 0, 0),
+    (471, 'GetDestructionStage', 0, 0, 0, 0),
+    (460, 'GetActorFactionPlayerEnemy', 0, 0, 0, 0),
+
+    # extended by FOSE
+    (1024, 'GetFOSEVersion', 0, 0, 0, 0),
+    (1025, 'GetFOSERevision', 0, 0, 0, 0),
+    (1213, 'GetFOSEBeta', 0, 0, 0, 0),
+    (1082, 'IsKeyPressed', 1, 0, 0, 0),
+    (1166, 'IsControlPressed', 1, 0, 0, 0),
+    (1028, 'GetWeight', 2, 0, 0, 0),
+    (1165, 'GetWeaponHasScope', 0, 0, 0, 0),
     )
 allConditions = set(entry[0] for entry in conditionFunctionData)
 fid1Conditions = set(entry[0] for entry in conditionFunctionData if entry[2] == 2)
 fid2Conditions = set(entry[0] for entry in conditionFunctionData if entry[3] == 2)
+fid3Conditions = set(entry[0] for entry in conditionFunctionData if entry[4] == 2)
+fid4Conditions = set(entry[0] for entry in conditionFunctionData if entry[5] == 2)
 
 # Magic Info ------------------------------------------------------------------
 weaponTypes = (
-    _('Blade (1 Handed)'),
-    _('Blade (2 Handed)'),
-    _('Blunt (1 Handed)'),
-    _('Blunt (2 Handed)'),
-    _('Staff'),
-    _('Bow'),
+    _('Big gun'),
+    _('Energy'),
+    _('Small gun'),
+    _('Melee'),
+    _('Unarmed'),
+    _('Thrown'),
+    _('Mine'),
     )
 
 magicEffects = {
