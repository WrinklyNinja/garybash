diff --git a/Mopy/bash/belt.py b/Mopy/bash/belt.py
index 6f4be3a..ac7ead0 100644
--- a/Mopy/bash/belt.py
+++ b/Mopy/bash/belt.py
@@ -356,7 +356,7 @@ class PageSelect(PageInstaller):
 
 def generateTweakLines(wizardEdits, target):
     lines = []
-    lines.append('; Generated by Wrye Bash %s for \'%s\' via wizard' % (basher.settings['bash.readme'][1], target.s))
+    lines.append('; Generated by Wrye Flash NV %s for \'%s\' via wizard' % (basher.settings['bash.readme'][1], target.s))
     for realSection in wizardEdits:
         if realSection == ']set[':
             format = wizardEdits[realSection][0]+' %(setting)s to %(value)s%(comment)s'
@@ -367,7 +367,7 @@ def generateTweakLines(wizardEdits, target):
             lines.append('[%s]' % wizardEdits[realSection][0])
             format = '%(setting)s=%(value)s%(comment)s'
         for realSetting in wizardEdits[realSection][1]:
-            lines.append(format % (dict(setting=wizardEdits[realSetting][1][realSetting],
+            lines.append(format % (dict(setting=wizardEdits[realSection][1][realSetting][0],
                                         value=wizardEdits[realSection][1][realSetting][1],
                                         comment=wizardEdits[realSection][1][realSetting][2],)))
     return lines
@@ -528,10 +528,10 @@ class PageFinish(PageInstaller):
 # PageVersions ---------------------------------------
 #  Page for displaying what versions an installer
 #  requires/recommends and what you have installed
-#  for Oblivion, OBSE, and OBGE, and Wrye Bash
+#  for Fallout, FOSE, and OBGE, and Wrye Flash
 #-----------------------------------------------------
 class PageVersions(PageInstaller):
-    def __init__(self, parent, bObOk, obHave, obNeed, bOBSEOk, obseHave, obseNeed, bOBGEOk, obgeHave, obgeNeed, bWBOk, wbHave, wbNeed):
+    def __init__(self, parent, bFoOk, foHave, foNeed, bFOSEOk, foseHave, foseNeed, bOBGEOk, obgeHave, obgeNeed, bWBOk, wbHave, wbNeed):
         PageInstaller.__init__(self, parent)
 
         bmp = [wx.Bitmap(bosh.dirs['images'].join('x.png').s),
@@ -553,33 +553,33 @@ class PageVersions(PageInstaller):
         sizerVersions.Add(wx.StaticText(self, -1, _('Have')))
         sizerVersions.AddStretchSpacer()
 
-        linkOb = wx.HyperlinkCtrl(self, -1, 'Oblivion', 'http://www.elderscrolls.com/downloads/updates_patches.htm')
-        linkOb.SetVisitedColour(linkOb.GetNormalColour())
-        linkOb.SetToolTip(wx.ToolTip('http://www.elderscrolls.com/'))
-        sizerVersions.Add(linkOb)
-        sizerVersions.Add(wx.StaticText(self, -1, obNeed))
-        sizerVersions.Add(wx.StaticText(self, -1, obHave))
-        sizerVersions.Add(wx.StaticBitmap(self, -1, bmp[bObOk]))
-
-        linkOBSE = wx.HyperlinkCtrl(self, -1, 'Oblivion Script Extender', 'http://obse.silverlock.org/')
-        linkOBSE.SetVisitedColour(linkOBSE.GetNormalColour())
-        linkOBSE.SetToolTip(wx.ToolTip('http://obse.silverlock.org/'))
-        sizerVersions.Add(linkOBSE)
-        sizerVersions.Add(wx.StaticText(self, -1, obseNeed))
-        sizerVersions.Add(wx.StaticText(self, -1, obseHave))
-        sizerVersions.Add(wx.StaticBitmap(self, -1, bmp[bOBSEOk]))
-
-        linkOBGE = wx.HyperlinkCtrl(self, -1, 'Oblivion Graphics Extender', 'http://timeslip.chorrol.com/obge.html')
-        linkOBGE.SetVisitedColour(linkOBGE.GetNormalColour())
-        linkOBGE.SetToolTip(wx.ToolTip('http://timeslip.chorrol.com/'))
-        sizerVersions.Add(linkOBGE)
-        sizerVersions.Add(wx.StaticText(self, -1, obgeNeed))
-        sizerVersions.Add(wx.StaticText(self, -1, obgeHave))
-        sizerVersions.Add(wx.StaticBitmap(self, -1, bmp[bOBGEOk]))
-
-        linkWB = wx.HyperlinkCtrl(self, -1, 'Wrye Bash', 'http://tesnexus.com/downloads/file.php?id=22368')
+        linkFo = wx.HyperlinkCtrl(self, -1, 'Fallout', 'http://fallout.bethsoft.com/eng/downloads/updates.html')
+        linkFo.SetVisitedColour(linkFo.GetNormalColour())
+        linkFo.SetToolTip(wx.ToolTip('http://fallout.bethsoft.com/'))
+        sizerVersions.Add(linkFo)
+        sizerVersions.Add(wx.StaticText(self, -1, foNeed))
+        sizerVersions.Add(wx.StaticText(self, -1, foHave))
+        sizerVersions.Add(wx.StaticBitmap(self, -1, bmp[bFoOk]))
+
+        linkFOSE = wx.HyperlinkCtrl(self, -1, 'Fallout 3 Script Extender', 'http://fose.silverlock.org/')
+        linkFOSE.SetVisitedColour(linkFOSE.GetNormalColour())
+        linkFOSE.SetToolTip(wx.ToolTip('http://fose.silverlock.org/'))
+        sizerVersions.Add(linkFOSE)
+        sizerVersions.Add(wx.StaticText(self, -1, foseNeed))
+        sizerVersions.Add(wx.StaticText(self, -1, foseHave))
+        sizerVersions.Add(wx.StaticBitmap(self, -1, bmp[bFOSEOk]))
+
+        # linkOBGE = wx.HyperlinkCtrl(self, -1, 'Fallout Graphics Extender', 'http://timeslip.chorrol.com/obge.html')
+        # linkOBGE.SetVisitedColour(linkOBGE.GetNormalColour())
+        # linkOBGE.SetToolTip(wx.ToolTip('http://timeslip.chorrol.com/'))
+        # sizerVersions.Add(linkOBGE)
+        # sizerVersions.Add(wx.StaticText(self, -1, obgeNeed))
+        # sizerVersions.Add(wx.StaticText(self, -1, obgeHave))
+        # sizerVersions.Add(wx.StaticBitmap(self, -1, bmp[bOBGEOk]))
+
+        linkWB = wx.HyperlinkCtrl(self, -1, 'Wrye Flash', 'http://www.fallout3nexus.com/downloads/file.php?id=11336')
         linkWB.SetVisitedColour(linkWB.GetNormalColour())
-        linkWB.SetToolTip(wx.ToolTip('http://tesnexus.com/'))
+        linkWB.SetToolTip(wx.ToolTip('http://www.fallout3nexus.com/'))
         sizerVersions.Add(linkWB)
         sizerVersions.Add(wx.StaticText(self, -1, wbNeed))
         sizerVersions.Add(wx.StaticText(self, -1, wbHave))
@@ -839,9 +839,9 @@ class WryeParser(ScriptParser.Parser):
         self.SetOperator('^', self.opExp, ScriptParser.OP.EXP, ScriptParser.RIGHT)
 
         #--Functions
-        self.SetFunction('CompareObVersion', self.fnCompareOblivionVersion, 1)
-        self.SetFunction('CompareOBSEVersion', self.fnCompareOBSEVersion, 1)
-        self.SetFunction('CompareOBGEVersion', self.fnCompareOBGEVersion, 1)
+        self.SetFunction('CompareFalloutVersion', self.fnCompareFalloutVersion, 1)
+        self.SetFunction('CompareFOSEVersion', self.fnCompareFOSEVersion, 1)
+        #self.SetFunction('CompareOBGEVersion', self.fnCompareOBGEVersion, 1)
         self.SetFunction('CompareWBVersion', self.fnCompareWBVersion, 1)
         self.SetFunction('DataFileExists', self.fnDataFileExists, 1, ScriptParser.KEY.NO_MAX)
         self.SetFunction('GetEspmStatus', self.fnGetEspmStatus, 1)
@@ -1080,15 +1080,12 @@ class WryeParser(ScriptParser.Parser):
     def opExp(self, l, r): return l ** r
 
     # Functions...
-    def fnCompareOblivionVersion(self, obWant):
-        ret = self._TestVersion(self._TestVersion_Want(obWant), bosh.dirs['app'].join('oblivion.exe'))
+    def fnCompareFalloutVersion(self, foWant):
+        ret = self._TestVersion(self._TestVersion_Want(foWant), bosh.dirs['app'].join('fallout3.exe'))
         return ret[0]
-    def fnCompareOBSEVersion(self, obseWant):
-        if bosh.inisettings['SteamInstall']:
-            obse = 'obse_steam_loader.dll'   # User may not have obse_loader.exe, since it's only required for the CS
-        else:
-            obse = 'obse_loader.exe'
-        ret = self._TestVersion(self._TestVersion_Want(obseWant), bosh.dirs['app'].join(obse))
+    def fnCompareFOSEVersion(self, foseWant):
+        fose = 'fose_loader.exe'
+        ret = self._TestVersion(self._TestVersion_Want(foseWant), bosh.dirs['app'].join(fose))
         return ret[0]
     def fnCompareOBGEVersion(self, obgeWant):
         ret = self._TestVersion_OBGE(self._TestVersion_Want(obgeWant))
@@ -1115,7 +1112,7 @@ class WryeParser(ScriptParser.Parser):
         iniPath = bolt.GPath(iniName)
         #--Section
         if section.strip().lower() == 'set':
-            realSection = LString(']set[')
+            realSection = bolt.LString(']set[')
         elif section.strip().lower() == 'setgs':
             realSection = bolt.LString(']setgs[')
         else:
@@ -1542,37 +1539,34 @@ class WryeParser(ScriptParser.Parser):
     def kwdNote(self, note):
         self.notes.append('- %s\n' % note)
 
-    def kwdRequireVersions(self, ob, obse='None', obge='None', wbWant='0'):
+    def kwdRequireVersions(self, fo, fose='None', obge='None', wbWant='0'):
         if self.bAuto: return
 
-        obWant = self._TestVersion_Want(ob)
-        if obWant == 'None': ob = 'None'
-        obseWant = self._TestVersion_Want(obse)
-        if obseWant == 'None': obse = 'None'
+        foWant = self._TestVersion_Want(fo)
+        if foWant == 'None': fo = 'None'
+        foseWant = self._TestVersion_Want(fose)
+        if foseWant == 'None': fose = 'None'
         obgeWant = self._TestVersion_Want(obge)
         if obgeWant == 'None': obge = 'None'
         wbHave = bosh.settings['bash.readme'][1]
 
-        ret = self._TestVersion(obWant, bosh.dirs['app'].join('oblivion.exe'))
-        bObOk = ret[0] >= 0
-        obHave = ret[1]
-        if bosh.inisettings['SteamInstall']:
-            obseName = 'obse_steam_loader.dll'
-        else:
-            obseName = 'obse_loader.exe'
-        ret = self._TestVersion(obseWant, bosh.dirs['app'].join(obseName))
-        bOBSEOk = ret[0] >= 0
-        obseHave = ret[1]
+        ret = self._TestVersion(foWant, bosh.dirs['app'].join('fallout3.exe'))
+        bFoOk = ret[0] >= 0
+        foHave = ret[1]
+        foseName = 'fose_loader.dll'
+        ret = self._TestVersion(foseWant, bosh.dirs['app'].join(foseName))
+        bFOSEOk = ret[0] >= 0
+        foseHave = ret[1]
         ret = self._TestVersion_OBGE(obgeWant)
         bOBGEOk = ret[0] >= 0
         obgeHave = ret[1]
         bWBOk = float(wbHave) >= float(wbWant)
 
-        if not bObOk or not bOBSEOk or not bOBGEOk or not bWBOk:
-            self.page = PageVersions(self.parent, bObOk, obHave, ob, bOBSEOk, obseHave, obse, bOBGEOk, obgeHave, obge, bWBOk, wbHave, wbWant)
+        if not bFoOk or not bFOSEOk or not bOBGEOk or not bWBOk:
+            self.page = PageVersions(self.parent, bFoOk, foHave, ob, bFOSEOk, foseHave, fose, bOBGEOk, obgeHave, obge, bWBOk, wbHave, wbWant)
     def _TestVersion_OBGE(self, want):
-        retOBGEOld = self._TestVersion(want, bosh.dirs['mods'].join('obse', 'plugins', 'obge.dll'))
-        retOBGENew = self._TestVersion(want, bosh.dirs['mods'].join('obse', 'plugins', 'obgev2.dll'))
+        retOBGEOld = self._TestVersion(want, bosh.dirs['mods'].join('fose', 'plugins', 'obge.dll'))
+        retOBGENew = self._TestVersion(want, bosh.dirs['mods'].join('fose', 'plugins', 'obgev2.dll'))
         haveNew = retOBGENew[1]
         haveOld = retOBGEOld[1]
         if haveNew != 'None':
